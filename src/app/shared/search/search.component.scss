.input-group .input-group-text {
  background-color: var(--bs-white);
  border: none;
}

.input-group input {
  border: none;
}

/* Make the mat-form-field outline white */
mat-form-field {
  --mdc-outlined-text-field-outline-color: white !important;
  --mdc-outlined-text-field-outline-hover-color: white !important;
  --mdc-outlined-text-field-outline-focused-color: white !important;
}

/* Make input text, floating label (`mat-label`), and placeholder white */
mat-form-field .mat-mdc-floating-label,
mat-form-field input.mat-mdc-input-element,
mat-form-field .mat-mdc-form-field-input-control,
mat-form-field mat-label {
  color: white !important;
}

/* Make placeholder text white */
mat-form-field input::-moz-placeholder,
mat-form-field .mat-mdc-form-field-input-control::-moz-placeholder {
  color: white !important;
}

mat-form-field input::placeholder,
mat-form-field .mat-mdc-form-field-input-control::placeholder {
  color: white !important;
}

/* Make the dropdown, calendar, and other icons white */
mat-form-field .mat-mdc-text-field-icon {
  color: white !important;
}

label {
  font-weight: 600;
  //text-transform: uppercase;
  font-size: 12px !important;
}

.icon-card {
  width: 56px;
  height: 56px;
  background-color: #EEEEEF;
  color: #98A2B3;
  border-radius: 0.25rem;
}

.form-btn {
  position: absolute;
  top: 70%;
  transform: translateY(10%);
}

.form-btn button {
  //background-color: black;
  color: white;
  width: 300px;
}

/* ========================================
   CONSISTENT INPUT HEIGHTS - MODIFIED
======================================== */
.rounded-input,
.rounded-input-one-way {
  border-radius: 1rem;
  min-height: 54px; /* Consistent height for all inputs */
  display: flex;
  align-items: center;
}

.border {
  border: 1px solid #ced4da !important;
}

.btn-primary {
  background-color: var(--primary-color-500) !important;
  border-color: var(--primary-color-500) !important;
}

.btn-primary:hover, .btn-primary:focus {
  background-color: var(--primary-color-600) !important;
  border-color: var(--primary-color-600) !important;
}

.btn-secondary {
  background: linear-gradient(135deg, var(--secondary-color-500) 0%, var(--secondary-color-400) 100%);
  border-color: var(--secondary-color-500) !important;
  color: white !important;
}

.btn-secondary:hover,
.btn-secondary:focus {
  background: linear-gradient(135deg, var(--secondary-color-700) 0%, var(--secondary-color-600) 100%);

  border-color: var(--secondary-color-600) !important;
  color: white !important;

}

/* Make labels smaller and positioned consistently */
label {
  font-weight: 600;
  //text-transform: uppercase;
  color: #6c757d;
  position: relative;
  top: 0;
  line-height: 1;
  margin: 0;
}

/* Make inputs bigger with consistent height */
.rounded-input input,
.rounded-input-one-way input {
  font-size: 0.95rem;
  padding: 0.6rem 0.5rem;
  border: none !important;
  outline: none !important;
  box-shadow: none !important;
  height: auto;
  line-height: 1.3;
}

input[type="date"] {
  font-size: 1rem;
  padding: 0.6rem 0.5rem;
}

input[type="radio"] {
  width: 1.25rem;
  height: 1.25rem;
}

input[type="radio"]:checked {
  background-color: var(--primary-color-500);
  border: var(--primary-color-700);
}

/* Wrapper around your hero search form */
.hero-section {
  position: relative;
  z-index: 1000;
}

/* Boost dropdown menu stacking */
.typeahead-dropdown,
.dropdown-menu {
  position: absolute;
  z-index: 1050;
}

/* When any input inside is focused, highlight the wrapper */
.rounded-input:focus-within,
.rounded-input-one-way:focus-within {
  border-color: var(--primary-color-500) !important;
  box-shadow: 0 0 1px 1px var(--primary-color-600);
}

.form-control {
  font-size: 18px;
  font-weight: bold;
  padding: 0;
  height: auto !important;
  min-height: unset !important;
}

/* ========================================
   PRIMENG DATEPICKER CONSISTENCY FIXES
======================================== */

/* Force PrimeNG inputs to match regular inputs exactly */
:host ::ng-deep .p-inputtext {
  border: none !important;
  padding: 0.6rem 0.5rem !important; /* Reduced from 0.75rem */
  font-size: 0.95rem !important; /* Reduced from 1rem */
  font-weight: 600;
  color: black;
  width: 100%;
  box-shadow: none !important;
  transition: border-color .15s ease-in-out, box-shadow .15s ease-in-out;
  height: auto !important;
  line-height: 1.3 !important;
  background: transparent !important;
}

:host ::ng-deep .p-datepicker-input {
  border: none !important;
  border-radius: 4px !important;
  min-height: unset !important;
  height: auto !important;
}

:host ::ng-deep .p-inputwrapper {
  border: none !important;
  border-radius: 4px !important;
  height: auto !important;
  min-height: unset !important;
  display: flex !important;
  align-items: center !important;
}

:host ::ng-deep .p-datepicker-input-wrapper {
  height: auto !important;
  display: flex;
  align-items: center;
}

:host ::ng-deep .p-component {
  height: auto !important;
}

:host ::ng-deep .p-datepicker {
  width: 100%;
}

/* Ensure the flex container in date inputs maintains height */
.rounded-input .d-flex.justify-content-between,
.rounded-input-one-way .d-flex.justify-content-between {
  align-items: center;
  height: 100%;
  min-height: inherit;
}

/* Consistent button heights in date inputs */
.rounded-input button,
.rounded-input-one-way button {
  height: fit-content;
  white-space: nowrap;
  flex-shrink: 0;
  padding: 0.4rem 0.6rem; /* Slightly reduce button padding */
  font-size: 0.85rem;
}

/* Ensure icons are vertically centered */
.rounded-input i,
.rounded-input-one-way i {
  align-self: center;
  flex-shrink: 0;
}

/* Ensure flex-grow-1 containers maintain consistent height */
.rounded-input .flex-grow-1,
.rounded-input-one-way .flex-grow-1 {
  display: flex;
  flex-direction: column;
  justify-content: center;
  height: 100%;
  min-height: inherit;
}

.typewriter p {
  width: fit-content;
  color: white;
  font-family: monospace;
  overflow: hidden;
  border-right: .15em solid var(--secondary-color-500);
  white-space: nowrap;
  margin: 0 auto;
  animation: typing 2.5s steps(30, end),
  blink-caret .5s step-end infinite;
}

/* The typing effect */
@keyframes typing {
  from {
    width: 0
  }
  to {
    width: 100%
  }
}

/* The typewriter cursor effect */
@keyframes blink-caret {
  from, to {
    border-color: transparent
  }
  50% {
    border-color: orange
  }
}

.search-btn {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 0.5rem;
}



/* ========================================
   RESPONSIVE DESIGN WITH CONSISTENT HEIGHTS
======================================== */

//sm
@media (max-width: 768px) {
  .rounded-input,
  .rounded-input-one-way {
    ////////////////////////////////////////////////////////////////////////
    min-height: 54px; /* Slightly smaller but still consistent on mobile */
  }

  .rounded-input input,
  .rounded-input-one-way input,
  :host ::ng-deep .p-inputtext {
    //padding: 0.5rem 0.4rem !important; /* Further reduced */
    font-size: 0.9rem !important;
  }

  .form-btn {
    position: static;
    top: 0;
    transform: none;
    width: 100%;
  }

  .form-btn button {
    width: 100%;
    padding: 0.5rem 0;
  }

  .rounded-input.first {
    border-radius: 1rem 1rem 0 0;
  }

  .rounded-input.second {
    border-radius: 0;
  }

  .rounded-input.third {
    border-radius: 0;
  }

  .rounded-input.forth {
    border-radius: 0 0 1rem 1rem;
  }

  .rounded-input-one-way {
    border-radius: 0 0 1rem 1rem;
  }

  .search-btn {
    background: linear-gradient(45deg, var(--primary-color-500), var(--primary-color-400));
    color:var(--primary-color-100);
    width: 100%;
  }


  .form-container{
    width: 100%;
  }

  /* Fix for date input buttons overflow on small screens */
  .rounded-input.third .d-flex.justify-content-between,
  .rounded-input-one-way .d-flex.justify-content-between {
    flex-wrap: nowrap;
    overflow-x: auto;
    overflow-y: hidden;
    -webkit-overflow-scrolling: touch;
    min-width: 0;
    scrollbar-width: thin;
    scrollbar-color: rgba(0,0,0,0.2) transparent;
  }

  /* Make buttons smaller on mobile but keep them functional */
  .rounded-input.third button,
  .rounded-input-one-way button {
    padding: 0.3rem 0.7rem ;
    font-size: 0.875rem !important;
    min-width: fit-content;
    white-space: nowrap;
    flex-shrink: 0;
    margin-left: 0.25rem;
  }

  /* Ensure the date input itself can shrink */
  .rounded-input.third .flex-grow-1,
  .rounded-input-one-way .flex-grow-1 {
    min-width: 0;
    flex: 1 1 auto;
    margin-right: 0.25rem;
  }

  /* Make the datepicker input more compact */
  .rounded-input.third :host ::ng-deep .p-inputtext,
  .rounded-input-one-way :host ::ng-deep .p-inputtext {
    padding: 0.4rem 0.2rem !important;
    font-size: 0.85rem !important;
  }

  /* Custom scrollbar styling for webkit browsers */
  .rounded-input.third::-webkit-scrollbar,
  .rounded-input-one-way::-webkit-scrollbar {
    height: 3px;
  }

  .rounded-input.third::-webkit-scrollbar-track,
  .rounded-input-one-way::-webkit-scrollbar-track {
    background: transparent;
  }

  .rounded-input.third::-webkit-scrollbar-thumb,
  .rounded-input-one-way::-webkit-scrollbar-thumb {
    background: rgba(0,0,0,0.2);
    border-radius: 2px;
  }

  .rounded-input.third::-webkit-scrollbar-thumb:hover,
  .rounded-input-one-way::-webkit-scrollbar-thumb:hover {
    background: rgba(0,0,0,0.3);
  }

  /* Alternative: Stack buttons below on very small screens */
  @media (max-width: 480px) {
    .rounded-input.third .d-flex.justify-content-between,
    .rounded-input-one-way .d-flex.justify-content-between {
      flex-direction: column;
      align-items: stretch;
      gap: 0.25rem;
      overflow: visible;
    }

    .rounded-input.third .d-flex.justify-content-between > div:first-child,
    .rounded-input-one-way .d-flex.justify-content-between > div:first-child {
      display: flex;
      align-items: center;
      flex: 1;
      margin-right: 0;
    }

    .rounded-input.third .d-flex.justify-content-between > button,
    .rounded-input-one-way .d-flex.justify-content-between > button {
      align-self: stretch;
      margin: 0.1rem 0;
      font-size: 0.75rem !important;
      padding: 0.4rem !important;
    }

    /* Adjust container height for stacked layout */
    .rounded-input.third,
    .rounded-input-one-way {
      //min-height: auto;
      padding: 0.5rem;
    }
  }
}

//md
@media (max-width: 991px) and (min-width: 769px) {
  .rounded-input,
  .rounded-input-one-way {
    min-height: 60px; /* Consistent height for medium screens */
  }

  .rounded-input.first {
    border-radius: 1rem 0 0 0;
  }

  .rounded-input.second {
    border-radius: 0 1rem 0 0;
  }

  .rounded-input.third {
    border-radius: 0 0 0 1rem;
    margin-bottom: 0.5rem;
  }

  .rounded-input.forth {
    border-radius: 0 0 1rem 0;
    margin-bottom: 0.5rem;
  }

  .rounded-input-one-way {
    border-radius: 0 0 1rem 1rem;
  }

  .form-btn {
    margin-top: 1.2rem;
  }
}

// remove the buttons at this stage for a better ui
@media (max-width: 1199px) and (min-width: 992px) {
  .rounded-input,
  .rounded-input-one-way {
    min-height: 74px; /* Maintain consistent height */
  }

  .rounded-input-one-way button {
    display: none;
  }
}

//lg
@media screen and (min-width: 991px) {
  .rounded-input,
  .rounded-input-one-way {
    min-height: 54px; /* Consistent height for large screens */
  }

  .rounded-input.first {
    border-radius: 1rem 0 0 1rem;
  }

  .rounded-input.second {
    border-radius: 0 0 0 0;
  }

  .rounded-input.third {
    border-radius: 0 0 0 0;
  }

  .rounded-input.forth {
    border-radius: 0 1rem 1rem 0;
    margin-bottom: 0.5rem;
  }

  .rounded-input-one-way {
    border-radius: 0 1rem 1rem 0;
  }
}

.small{
  font-size: 14px;
}
.bg-search-card{
  background:linear-gradient(45deg, var(--gray-100), var(--gray-50));
}
/* styles.scss or component styles with ::ng-deep */
::ng-deep .wide-tooltip {
  min-width: 220px;   /* set your desired width */
  max-width: 300px;   /* optional: prevent it from getting too wide */
  white-space: normal; /* allow wrapping if text is long */
}

 //iINFOR Bubblle  e demo !

.info-bubble {
  //background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  background: linear-gradient(135deg, var(--secondary-color-500) 0%, var(--secondary-color-400) 100%);
  color: white;
  padding: 4px 8px;
  border-radius: 20px;
  font-size: 12px;
  font-weight: 500;
  box-shadow: 0 4px 8px rgba(var(--secondary-800), 0.3);
  display: inline-block;
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  margin-bottom: 4px;
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.02);
    //box-shadow: 0 8px 12px rgba(118, 75, 162, 0.5);
  }
  100% {
    transform: scale(1);
  }
}

.pi {
  margin-right: 8px;
}

.pi {
  margin-right: 8px;
}

// fix the height of the third button
:host ::ng-deep .rounded-input.third .p-datepicker {
  height: 100% !important;
}

:host ::ng-deep .rounded-input.third .p-inputtext {
  height: auto !important;
  line-height: 1.3 !important;
}
